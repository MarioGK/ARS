@inherits BaseChartSeries
@namespace ARS.Web.Components.Charts

<div class="@Classname" style="@Style">
    <svg class="mud-chart-line mud-ltr" width="@Width" height="@Height" viewBox="0 0 650 350">
        <g class="mud-charts-grid">
            <g class="mud-charts-gridlines-yaxis">
                @foreach (var horizontalLine in _horizontalLines)
                {
                    <path stroke="#e0e0e0" stroke-width="0.3" d="@horizontalLine.Data"></path>
                }
            </g>
            @*Vertical grid lines*@
            @if (/*MudChartParent?.ChartOptions.XAxisLines==true*/false)
            {
                <g class="mud-charts-gridlines-xaxis-lines">
                    @foreach (var verticalLine in _verticalLines)
                    {
                        <path stroke="gray" stroke-width="0.3" d="@verticalLine.Data"></path>
                    }
                </g>
            }
        </g>
        <g class="mud-charts-yaxis">
            @foreach (var horizontalLineValue in _horizontalValues)
            {
                @((MarkupString)$"<text x='{horizontalLineValue.X.ToString(CultureInfo.InvariantCulture)}' y='{horizontalLineValue.Y.ToString(CultureInfo.InvariantCulture)}' font-size='12px' text-anchor='end' dominant-baseline='auto'>{horizontalLineValue.Value.ToString(CultureInfo.InvariantCulture)}</text>")
            }
        </g>
        <g class="mud-charts-xaxis">
            @foreach (var verticalLineValue in _verticalValues)
            {
                @((MarkupString)$"<text x='{verticalLineValue.X.ToString(CultureInfo.InvariantCulture)}' y='{verticalLineValue.Y.ToString(CultureInfo.InvariantCulture)}' font-size='12px' text-anchor='middle'>{verticalLineValue.Value.ToString(CultureInfo.InvariantCulture)}</text>")
            }
        </g>
        <g class="mud-charts-bar-series">
            @foreach (var bar in _bars)
            {
                <path 
                    class="hoverColor mud-chart-bar" 
                    @onclick="() => SelectedIndex = bar.Index" 
                    @onmouseout="args => OnMouseOut(args, bar)"
                    @onmouseover="args => OnMouseHover(args, bar)"
                    @onmousemove="args => OnMouseMove(args, bar)"
                    fill="@(GetColor(bar.Index))"
                    stroke="@(GetColor(bar.Index))" 
                    stroke-width="8" d="@bar.Data"></path>
            }
        </g>
    </svg>  
    <ChartLegend Items="Series" />
</div>
<style>
    .hoverColor:hover {
        filter: brightness(115%);
    }
</style>

@if (TooltipVisible)
{
    @Tooltip
}
